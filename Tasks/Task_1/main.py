# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FinalDesign.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtGui import QPixmap
from PIL import Image
import numpy as np
import os
import pydicom as dicom



class Ui_ImageViewer(object):
    def setupUi(self, ImageViewer):
        ImageViewer.setObjectName("ImageViewer")
        ImageViewer.resize(910, 756)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(ImageViewer)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.pushButtonOpenImage = QtWidgets.QPushButton(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonOpenImage.setFont(font)
        self.pushButtonOpenImage.setObjectName("pushButtonOpenImage")
        self.verticalLayout_3.addWidget(self.pushButtonOpenImage)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.imageViewer = QtWidgets.QLabel(ImageViewer)
        self.imageViewer.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.imageViewer.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.imageViewer.setText("")
        self.imageViewer.setObjectName("imageViewer")
        self.verticalLayout_4.addWidget(self.imageViewer)
        self.verticalLayout_3.addLayout(self.verticalLayout_4)
        self.verticalLayout_2.addLayout(self.verticalLayout_3)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout()
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout()
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.labelWidth = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelWidth.setFont(font)
        self.labelWidth.setObjectName("labelWidth")
        self.verticalLayout_19.addWidget(self.labelWidth)
        self.width = QtWidgets.QLineEdit(ImageViewer)
        self.width.setObjectName("width")
        self.verticalLayout_19.addWidget(self.width)
        self.horizontalLayout_4.addLayout(self.verticalLayout_19)
        self.verticalLayout_20 = QtWidgets.QVBoxLayout()
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.labelHeight = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelHeight.setFont(font)
        self.labelHeight.setObjectName("labelHeight")
        self.verticalLayout_20.addWidget(self.labelHeight)
        self.height = QtWidgets.QLineEdit(ImageViewer)
        self.height.setObjectName("height")
        self.verticalLayout_20.addWidget(self.height)
        self.horizontalLayout_4.addLayout(self.verticalLayout_20)
        self.verticalLayout_18.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout()
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.labelTotalSize = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelTotalSize.setFont(font)
        self.labelTotalSize.setObjectName("labelTotalSize")
        self.verticalLayout_21.addWidget(self.labelTotalSize)
        self.totalSize = QtWidgets.QLineEdit(ImageViewer)
        self.totalSize.setObjectName("totalSize")
        self.verticalLayout_21.addWidget(self.totalSize)
        self.horizontalLayout_12.addLayout(self.verticalLayout_21)
        self.verticalLayout_42 = QtWidgets.QVBoxLayout()
        self.verticalLayout_42.setObjectName("verticalLayout_42")
        self.labelBitDepth = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelBitDepth.setFont(font)
        self.labelBitDepth.setObjectName("labelBitDepth")
        self.verticalLayout_42.addWidget(self.labelBitDepth)
        self.bitDepth = QtWidgets.QLineEdit(ImageViewer)
        self.bitDepth.setObjectName("bitDepth")
        self.verticalLayout_42.addWidget(self.bitDepth)
        self.horizontalLayout_12.addLayout(self.verticalLayout_42)
        self.verticalLayout_18.addLayout(self.horizontalLayout_12)
        self.verticalLayout.addLayout(self.verticalLayout_18)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.verticalLayout_54 = QtWidgets.QVBoxLayout()
        self.verticalLayout_54.setObjectName("verticalLayout_54")
        self.labelImageColor = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelImageColor.setFont(font)
        self.labelImageColor.setObjectName("labelImageColor")
        self.verticalLayout_54.addWidget(self.labelImageColor)
        self.ImageColor = QtWidgets.QLineEdit(ImageViewer)
        self.ImageColor.setObjectName("ImageColor")
        self.verticalLayout_54.addWidget(self.ImageColor)
        self.horizontalLayout_15.addLayout(self.verticalLayout_54)
        self.verticalLayout.addLayout(self.horizontalLayout_15)
        self.verticalLayout_57 = QtWidgets.QVBoxLayout()
        self.verticalLayout_57.setObjectName("verticalLayout_57")
        self.labelDicom = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelDicom.setFont(font)
        self.labelDicom.setObjectName("labelDicom")
        self.verticalLayout_57.addWidget(self.labelDicom)
        self.verticalLayout_58 = QtWidgets.QVBoxLayout()
        self.verticalLayout_58.setObjectName("verticalLayout_58")
        self.labelModality = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelModality.setFont(font)
        self.labelModality.setObjectName("labelModality")
        self.verticalLayout_58.addWidget(self.labelModality)
        self.modality = QtWidgets.QLineEdit(ImageViewer)
        self.modality.setObjectName("modality")
        self.verticalLayout_58.addWidget(self.modality)
        self.verticalLayout_57.addLayout(self.verticalLayout_58)
        self.verticalLayout_59 = QtWidgets.QVBoxLayout()
        self.verticalLayout_59.setObjectName("verticalLayout_59")
        self.labelPatientName = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelPatientName.setFont(font)
        self.labelPatientName.setObjectName("labelPatientName")
        self.verticalLayout_59.addWidget(self.labelPatientName)
        self.patientName = QtWidgets.QLineEdit(ImageViewer)
        self.patientName.setObjectName("patientName")
        self.verticalLayout_59.addWidget(self.patientName)
        self.verticalLayout_57.addLayout(self.verticalLayout_59)
        self.verticalLayout_60 = QtWidgets.QVBoxLayout()
        self.verticalLayout_60.setObjectName("verticalLayout_60")
        self.labelPatienAge = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelPatienAge.setFont(font)
        self.labelPatienAge.setObjectName("labelPatienAge")
        self.verticalLayout_60.addWidget(self.labelPatienAge)
        self.patientAge = QtWidgets.QLineEdit(ImageViewer)
        self.patientAge.setObjectName("patientAge")
        self.verticalLayout_60.addWidget(self.patientAge)
        self.verticalLayout_57.addLayout(self.verticalLayout_60)
        self.verticalLayout_61 = QtWidgets.QVBoxLayout()
        self.verticalLayout_61.setObjectName("verticalLayout_61")
        self.labelBodyPartExamined = QtWidgets.QLabel(ImageViewer)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.labelBodyPartExamined.setFont(font)
        self.labelBodyPartExamined.setObjectName("labelBodyPartExamined")
        self.verticalLayout_61.addWidget(self.labelBodyPartExamined)
        self.bodyPartExamined = QtWidgets.QLineEdit(ImageViewer)
        self.bodyPartExamined.setObjectName("bodyPartExamined")
        self.verticalLayout_61.addWidget(self.bodyPartExamined)
        self.verticalLayout_57.addLayout(self.verticalLayout_61)
        self.verticalLayout.addLayout(self.verticalLayout_57)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.verticalLayout_5.addLayout(self.verticalLayout_2)

        self.retranslateUi(ImageViewer)
        QtCore.QMetaObject.connectSlotsByName(ImageViewer)

        """Connect button to the function"""
        self.pushButtonOpenImage.clicked.connect(self.Browse)


    def Browse(self):
        self.clearData()
        self.fileName, self.file = QFileDialog.getOpenFileName(
                None, "Choose an image",
                "C:/",
                "Images (*.jpg *.bmp *.dcm)")
        # self.fileName, self.ext = QFileDialog.getOpenFileName(self, 'Open image file', QtCore.QDir.rootPath(
        # ), 'PNG files(*.png);;JPG files(*.jpg);;JPEG files(*.jpeg);;DICOM files(*.dcm);;BMP files(*.bmp)')
        if ('.dcm' in self.fileName):
            try:
                # Read and parse a DICOM dataset
                self.dcmHeader = dicom.dcmread(self.fileName)
                #print(self.dcmHeader)
            # Display data as an image
                self.dcmHeaderArr = self.dcmHeader.pixel_array.astype(float)
                self.rescaledImage = (np.maximum(
                self.dcmHeaderArr, 0)/self.dcmHeaderArr.max()) * 255.0  # float pixel
                self.finalImage = np.uint8(self.rescaledImage)  # Integer Pixel
                self.finalImage = Image.fromarray(self.finalImage)
                self.finalImage.save('image.jpg')
                self.dynamicPath = os.getcwd()
                self.fileName = self.dynamicPath + '\image.jpg'
                self.pixMap = QPixmap(self.fileName)
                self.imageViewer.setPixmap(self.pixMap)
                self.imageViewer.setScaledContents(True)
                # print(self.dcmHeader)
                self.showDicomMetaData()
            except:
                print('DICOM file missing meta data')
        else:
            try:
                self.pixMap = QPixmap(self.fileName)
                self.imageViewer.setPixmap(self.pixMap)
                self.imageViewer.setScaledContents(True)
                self.showMetaData()
            except:
                print('Corrupt File')

    def showDicomMetaData(self):

        #self.dcmHeader = dicom.dcmread(self.fileName)
        print(self.dcmHeader)
        """Getting the image normal data from the header"""
        self.dcmWidth = self.dcmHeader["Columns"]
        self.dcmHeight = self.dcmHeader["Rows"]
        print(self.dcmHeader)
        self.width.setText(str(self.dcmWidth.value))
        self.height.setText(str(self.dcmHeight.value))
        self.dcmBitDepth = self.dcmHeader["BitsAllocated"]
        self.bitDepth.setText(str(self.dcmBitDepth.value))
        self.totalSize.setText(
            str(self.dcmWidth.value * self.dcmHeight.value * self.dcmBitDepth.value))
        try:
            self.dcmColor = self.dcmHeader["PhotometricInterpretation"]
            self.ImageColor.setText(self.dcmColor.value)
        except:
            self.ImageColor.setText('Not Found')
        try:
            self.dcmModality = self.dcmHeader["Modality"]
            self.modality.setText(self.dcmModality.value)
        except:
            self.modality.setText("Not Found")
        try:
            self.dcmPatientName = self.dcmHeader["PatientName"]
            self.patientName.setText(self.dcmPatientName.value)
            # if self.dcmPatientName.is_empty:
            #     self.patientName.setText('Not Found')
            # else:
            #     self.patientName.setText(self.dcmPatientName.value)
        except:
            self.patientName.setText('Not Found')
        try:
            self.dcmPatientAge = self.dcmHeader["PatientAge"]
            self.patientAge.setText(self.dcmPatientAge.value)
        except:
            self.patientAge.setText('Not Found')
        try:
            self.dcmExaminedPart = self.dcmHeader["BodyPartExamined"]
            self.bodyPartExamined.setText(self.dcmExaminedPart.value)
            # if self.dcmExaminedPart.is_empty:
            #     self.bodyPartExamined.setText('Not Found')
            # else:
            #     self.bodyPartExamined.setText(
            #         self.dcmExaminedPart.value)
        except:
            self.bodyPartExamined.setText('Not Found')

    def showMetaData(self):
        # returns an object of the image that can be read
        self.img = Image.open(self.fileName)
        self.img_np = np.asarray(self.img)
        if (len(self.img_np.shape) == 2):
            self.channels = 1
        elif (len(self.img_np.shape) == 3):
            self.channels = self.img_np.shape[2]
        self.width.setText(str(self.img.width))
        self.height.setText(str(self.img.height))
        self.min = int(np.amin(self.img))
        self.max = int(np.amax(self.img))
        self.bit_depth = (
            np.ceil(np.log2(self.max-self.min+1)))*self.channels
        self.bitDepth.setText(str(self.bit_depth))
        self.totalSize.setText(
                    str(self.img.width * self.img.height * self.bit_depth))
        self.imgColorString = self.img.mode
        if (self.imgColorString) == 'RGB':
            self.ImageColor.setText('Color(RGB)')
        elif (self.imgColorString) == 'L':
            self.ImageColor.setText('Gray')
        elif (self.imgColorString) == '1':
            self.ImageColor.setText('Binary')
        else:
            self.ImageColor.setText(self.imgColorString)
        

    # To clear the text boxex and the figure
    def clearData(self):
        #self.imageViewer.setText("Please choose a non-corrupted image")
        self.height.clear()
        self.width.clear()
        self.totalSize.clear()
        self.bitDepth.clear()
        self.bodyPartExamined.clear()
        self.patientName.clear()
        self.patientAge.clear()
        self.modality.clear()
        self.ImageColor.clear()
        
    def retranslateUi(self, ImageViewer):
        _translate = QtCore.QCoreApplication.translate
        ImageViewer.setWindowTitle(_translate("ImageViewer", "Image Viewer"))
        self.pushButtonOpenImage.setText(
            _translate("ImageViewer", "Open an image"))
        self.labelWidth.setText(_translate("ImageViewer", "Width"))
        self.labelHeight.setText(_translate("ImageViewer", "Height"))
        self.labelTotalSize.setText(_translate(
            "ImageViewer", "Total size in bits"))
        self.labelBitDepth.setText(_translate("ImageViewer", "Bit depth"))
        self.labelImageColor.setText(_translate("ImageViewer", "Image color:"))
        self.labelDicom.setText(_translate(
            "ImageViewer", "Info For DICOM Images Only"))
        self.labelModality.setText(_translate("ImageViewer", "Modality"))
        self.labelPatientName.setText(_translate("ImageViewer", "PatientName"))
        self.labelPatienAge.setText(_translate("ImageViewer", "PatientAge"))
        self.labelBodyPartExamined.setText(
            _translate("ImageViewer", "BodyPartExamined"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ImageViewer = QtWidgets.QGroupBox()
    ui = Ui_ImageViewer()
    ui.setupUi(ImageViewer)
    ImageViewer.show()
    sys.exit(app.exec_())
